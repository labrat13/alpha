++ По Оператору

Что-то проект Оператора застрял.
- На создании диалога ввода данных для создания Места.
- и вообще, проекты встали. Лето. Нет желания работать.
- диалог не разработан теоретически, поэтому я его на ходу сочиняю и перебираю варианты. Он пока формируется. Изобретается.
- вообще, весь процесс процедур сейчас впервые формируется. Поэтому медленно. А еще, Лето.

+++1
Если я допилю диалоги в Оператор, это мне что-то даст полезное?
- я смогу быстро создавать Места
- я смогу быстрее создавать код Процедур.
- количество команд в Операторе будет расти быстрее. Если этим заниматься.

+++2
В операторе сейчас очень много работы по созданию инфраструктуры и проверке гипотез.
Лучше бы это запланировать и концентрированно сделать, а не отдельными попытками.
- но создание команд и мест требует изучения ситуации, изучения утилит, тестирования исполнения команд, итп.
  И это довольно сложная работа. Каждая такая утилита тянет на отдельную задачу. 
-- Еще по каждой утилите и команде надо вести справочник, в него записывать все эти особенности утилиты и ее применения.
   Без него повторно разбираться с командами, и понимать, почему они делают не то что ожидается, будет сложно.

- Создать много всяких Мест
- Добавить много утилит.
- Добавить много команд

Так собрать большой набор функциональности и тогда уже делать выводы о возможностях Оператора.

+++3
Но ситуация с делами не улучшится, если я перенесу их в Оператор. 
Так как проблема не в том, что их нет в Операторе, а в их исполнении. 
Нужен список проектов, их отбор, критерии отбора, работы по ним!
Нужны ресурсы для проектов!

+++4
Оператор - это моя попытка начать уже проект ИИ, и:
- я устал возиться с деталями, мне надо переходить к более естественной работе. 
  Вот, управление естественной речью начал развивать.
- Это возрастное. Сопротивление новому. Тем более, это новое очень хаотичное. 
  Вот я и хочу сделать текстовый интерфейс, независимый от версии ОС, позволяющий делать мои работы.

+++5
Оператор в виде консоли неудобен.Он не получает извещения о событиях, не может корректно завершиться.
Надо переделать его на GUI! 
Но сначала надо провести все эксперименты и написать все требуемые документы.

+++6
- для Процедур надо хранить класс метода и типы аргументов. 
   Без этого нельзя автоматически выбирать Процедуры (это нужно для более поздних версий Оператора)
-- их можно сейчас хранить только в Тапп БД. Там это просто и не мешает остальной работе. 
   А в реляционной БД это слишком сложно организовать.

+++7 
- Для новой версии Оператора нужно использовать Тапп в качестве БД.
-- Это получится целая тема в проекте - как внедрить Тапп. Это непросто.

+++8
Для команд надо хранить и синонимы команд. Чтобы сопоставлять введенные запросы и имеющиеся команды.
Но как это сделать?
- сейчас это никак не сделать. 
-- Либо надо изменять регекс (простой регекс на сложный с вариантами) существующей команды. Это сложно, с консоли не сделать.
-- Либо надо создать новую команду, с тем же набором аргументов и той же строкой процедуры.
- Пример:
Вариант А - инициатива исходит от пользователя:
> Игроманить Дум
< я так не умею
> Создать команду Игроманить Дум
... создание команды

Вариант Б - инициатива исходит от оператора:
> Игроманить Дум
< я так не умею
< Создать команду "Игроманить Дум"?[Да, Нет]_
> Да
... создание команды

+++Добавление неизвестных команд и работа с настройками Оператора
Сейчас ответ Оператора "я так не умею" считается нормальным. Но это же неправильно!
Оператор должен предлагать создать команду, если ее нет!
Хотя, если пользователь не понимает, лучше ему не предлагать.
Лучше пусть пользователь инициирует создание новой команды?
- надо создать флаг условия "Предлагать создание команды" и внести его в настройки Оператора.
Чтобы отключать или включать его по надобности.
- надо сделать команды для управления настройками Оператора тогда. 
  Чтобы через текстовый интерфейс: 
--просматривать настройки Оператора 
--изменять их
--сбрасывать на начальные.  
