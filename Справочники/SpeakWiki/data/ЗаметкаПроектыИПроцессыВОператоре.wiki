++ Заметка Проекты И Процессы В Операторе


Я тут задумался - как заставить Оператор участвовать в моих проектах?
Надо для него описать процесс работы проекта, чтобы он мог в нем ориентироваться и исполнять для меня команды.
Я рассуждаю об этом на примере моего текущего процесса конвертации файлов дампа сайтов в локальную html-версию сайта.
Это очень большой (по моим меркам) и довольно сложный в реализации процесс.

Собрать модель процесса - почти то же, что и написать программу.
В модели есть объекты, классы объектов, отношения, взаимодействия.
Из модели можно построить код.

Типичноя на компьютере работаю с папками и файлами. Их следует представить классами с методами, и производными классами согласно типу файла.
В NET фреймворке нет классов Файл и Каталог, создающих свои объекты. 
Есть только FileInfo, DirectoryInfo - из них можно сделать собственные классы Файл и Каталог. 

- Но в целом, да - это разработка модели кода.
- в процессе надо предусматривать разрывы - для отладки, для устранения ошибок, для перерыва в работе.
-- Это должно быть заложено уже в модель, чтобы в этом месте процесс можно было отложить и затем перезапустить или продолжить.
   Это я уже умею делать в уме, просто надо это в модели оформить.

   Классы Сущностей:
И вот, в этой модели конвертера у меня есть:
- Папка проекта C:\Temp
- папка исходных данных проекта
- собственно папки ( исходных файлов ) сайтов 
- файлы в папках сайтов
- БД как промежуточное хранилище для проведения выборки записей
- папка результатов проекта
- папка результата сборки сайта - создается автоматически в процессе конверсии.
- папка обработанных результатов проекта (файлов 7z и CHM)

Притом, оказывается, это все еще и не стабильно! 
- CHM медленно обрабатывает большие сайты и совсем не обрабатываетсайты с неправильными символами.   
-- конвертер CHM создавался для ручной работы и не годится для таких процессов! Поэтому эту часть работы должен делать пользователь вручную!
--- и это выясняется уже после создания модели, а то и в середине работы!
---- поэтому-то проверенные модели работ так ценны! в них уже все эти обстоятельства учтены и найдены решения проблем.
- то есть, процесс еще сначала надо отлаживать. Проблема тут в том, что ошибки выявляются в процессе работы, иногда в середине или конце ее.


Значит, нужно использовать модель классов Сущностей в Тапп. Из нее, в рамках этого проекта, наследовать классы  Сущностей, переопределить их, связывать объекты в модель.
(папки, файлы привязать к объектам, потом объекты связать в модели при помощи их методов)
И затем эту модель либо компилировать в код, либо интерпретировать - но это медленнее.

Но Оператору эта модель нужна, чтобы я мог использовать ее Сущности в соих командах.
То есть, в Операторе пока нужна только самая общая модель проекта
foreach(Folder f in srcFolder)
{
	XmlToDb(myDb);
	makeSite(myDb);
}
Или можно представить это диаграммой, где Сущности - Предметы: Папка, БД; программы - методы - направленные линии, связывающие Предметы.
Но если этот механизм развить, то можно и программы писать через создание модели.
Хотя для этого потребуется больше классов в Тапп-модели фреймворка.
- Тапп-модель фреймворка - модель сущностей реального мира, встречающихся в процессах и работах. 
  Я могу создать библиотеку Сущностей реального мира, чтобы использовать их в своих моделях?
  - еще бы и уметь ими пользоваться как следует... Но это - попутное достижение моделирования процессов.
    И для нее мне нужен Тапп, чтобы было где хранить это все.
- Надо Тапп развивать для этого...

- И вот, после того, как я определил весь процесс, мне надо почему-то в него вмешиваться и я запрашиваю свойства отдельных его Сущностей...
Потому что мир не идеален и я хочу снизить риски. То есть, веду проект вручную.
-- Я не знаю, сколько ресурсов потребит процесс, и не уверен, что их хватит на все итерации. Поэтому хочу переопределить порядок итераций.
Например, самый большой сайт я хочу оставить напоследок, или наоборот, в начало процесса.
---  в данном случае, лучше в конец процесса, так как ошибки выявляются по мере использования, а перезапускать конвертирование лучше для небольшого сайта.
-- конверсия занимает много времени, а я хочу сразу же использовать результат, чтобы на другой машине делать с ним ручную работу в то время, пока процесс обрабатывает следующую итерацию.
-- то есть, это оптимизации с целью экономии ресурсов и снижения рисков, итп. Они иногда совершенно необходимы, но они повышают суету и риски. Надо лучше планировать.
-- с планированием у меня всегда проблемы. Это отдельная тема вообще-то.
   Для планирования процессов надо хорошо знать предметную область. 
   И хорошо бы хотя бы часть этой работы переложить на компьютер, но пока не получается.
   И если я буду заниматься планированием серьезно, там много всего нужно учитывать, а у меня исполнять эти планы некому.
   Вот поскольку я один на все виды деятельности, то и получается все - все - недостаточно хорошо.
   