++ Правила проектирования диалога Процедуры

Выписать ошибки консоли и процедуры создания Места, по скриншоту.
Цель: сделать вывод на консоль более понятным, удобным и простым.
Цель: написать правила и руководство по созданию диалогов для процедур РИ. 

+++Хороший скриншот
[rel://files/Скриншот диалога исправленного.PNG]

+++Правила
* Надо проектировать внешний вид диалога каждой процедуры. Это важно!
* Вывод на консоль разделяется на 4 категории: Сообщение, Вопрос, Предупреждение, Успех. Каждая категория имеет свой цвет. Поэтому пользователь может определить, что, в общем смысле, выведено на экран, не читая сам текст сообщения. Без такой расцветки все тексты на консоли сливаются в один поток, в нем трудно находить собственные ответы пользователя.
    * Цвета для категорий желательно выбирать бледные. А ввод пользователя - ярким цветом. Но консоль по умолчанию настроена на ввод бледным белым цветом, так что приходится мириться пока с этим недостатком.
    * Цвета для категорий выбираются из ограниченного набора вариантов, поэтому цветовая схема получается аляповатая. Надо привыкнуть.  
* Диалог процедуры (собственно текст) должен иметь план и быть разделен на нумерованные пункты плана. Это позволяет пользователю ориентироваться в процессе и понимать, на каком этапе процесса он сейчас находится. Это визуально разделяет этапы диалога.
* Все пункты плана должны выводиться как заголовки - цветом Сообщение.
* Текст пунктов плана должен быть кратким, лаконичным, но характерным.
* Надо заранее разработать макет вывода на экран, и переработать его так, чтобы в целом весь диалог выглядел красивым, понятным, лаконичным, логически стройным. Это существенная работа! 
* Перед пунктом плана должна выводиться одна пустая строка. Это визуально разделяет диалог на отдельные пункты.
* Если в пункте плана есть только сообщение - вопрос+ответ, то он выводится после вывода собственно заголовка пункта плана.
    * Сообщение - вопрос относится к категории Вопрос и должно выводиться соответствующим цветом.
    * Ранее я выводил вопрос сразу как пункт плана. Получалась такая цветовая каша: пункты плана разного цвета. Это неудобно для восприятия. Пришлось вопросы отделить от пунктов плана. Стало больше текста и больше порядка.
* Внутри пункта диалога обычно полезны уточняющие сообщения. Они относятся к категории Сообщение и выводятся соответствующим цветом.
* Вопросы обычно имеют секцию субкоманд. Например: [Да/Нет/Отмена]. 
    * Секция субкоманд содержит ожидаемые субкоманды, которыми можно изменить ход диалога. Это напоминание пользователю, какие варианты реакций у него есть, помимо собственно ввода текста ответа на вопрос. Иногда принимаются только субкоманды - тогда это аналог GUI-диалога MessageBox - если пользователь вводит что-то другое, не субкоманду, то выводится сообщение "Принимаются только ответы Да Нет Отмена" и вопрос повторяется.
    * Поскольку субкоманды можно ввести только в ответ на вопрос, они используются только с сообщениями-вопросами.
    * Секция субкоманд должна быть отделена от собственно текста вопроса одним пробелом.
    * Секция субкоманд заключена в квадратные скобки. Субкоманды внутри секции разделены символом /.
    * Секция субкоманд выводится тем же цветом категории Вопрос.
* Вопросы имеют два варианта размещения ответа:
    * на той же строке - для коротких ответов вроде Да, Нет, сапог. 
    * с начала новой строки - для ввода путей файлов, веб-адресов, описаний и других ожидаемо длинных строк.
    * Надо выбирать правильный вариант при проектировании макета диалога процедуры. Хотя потом можно в коде легко исправить, но лучше сразу сделать правильно.
* Если выявлена нежелательная ситуация, выводится сообщение категории Предупреждение, соответствующим цветом. 
    * Сообщение не должно содержать слов Предупреждение или Ошибка, так как это уже обозначается цветом символов. 
    * Текст предупреждения должен кратко и емко информировать пользователя о проблеме.
    * Предупреждение это не ошибка. Ошибка просто прерывает исполнение процедуры и, возможно, вообще Оператора. Здесь же это уведомление о нежелательной ситуации, которая была предусмотрена алгоритмом диалога.
* Если процедура создает некий объект (Место, Процедура, ...), перед его собственно созданием нужно под отдельным пунктом показать пользователю свойства создаваемого объекта и запросить подтверждение на создание объекта.
    * Пример: Желаете создать новое Место? [Да/Нет/Отмена]
    * Пользователь может ввести Отмена, чтобы прервать процедуру и отменить создание нового объекта. Хотя и ответ Нет здесь тоже отменяет создание нового объекта. 
* Если процедура завершена успешно, должно быть выведено сообщение об этом. Сообщение категории Успех и соответствующего цвета.
    * Если возможно, сообщение должно содержать название созданного объекта, заключенное в кавычки. 
    * Пример: Место "кот" создано 
    * Сообщение не должно содержать слово "успешно", так как так как это уже обозначается цветом символов.
* Начало процедуры желательно обозначать сообщением "Начата процедура ИмяСборки.ИмяПроцедуры(имяАргумента, имяАргумента, ...)".
    * Это нужно пользователю для понимания, какая процедура была запущена, для обнаружения ошибки и отладки исполнения процедуры. 
    * Но есть идея выводить это в лог Оператора, а не на экран. На экране это вроде как лишнее.
* Конец процедуры тоже желательно оформить сообщением, но пока это не делается.
    * И его тоже лучше выводить в лог Оператора, а не на экран.
* Алгоритм процедуры надо планировать строго после составления плана (и макета) диалога процедуры. 
* Алгоритм процедуры обязательно рисовать как блок-схему. Это позволяет выявить упущенные ветви вариантов, оптимизировать исполнение и удалить ошибочные части алгоритма. Алгоритм процедуры обычно достаточно сложный, поэтому по блок-схеме намного проще писать код процедуры. А по макету диалога процедуры проще расставлять выводы сообщений и пустых строк. И проверять потом весь алгоритм и код.
* В коде процедур лучше использовать goto  и метки label_xxx. Так проще структурировать код и организовывать всякие эти возвраты к началу после неуспешных проверок введенных данных. Слишком сложная логика в текстовых диалогах ввода свойств объектов.
* Между последней строкой диалога одной команды и строкой - приглашением ввода другой команды должно быть две пустые строки.
    * Это отделяет команды друг от друга, и они не сливаются с диалогами предыдущей процедуры.

* todo: добавить правила здесь  

++Материалы
+++Оригинальный скриншот
Послужил материалом для анализа и составления списка замечаний.
[rel://files/Скриншот создания Мест.PNG]

+++Улучшенный скриншот
После исправления некоторых выявленных недостатков. Теперь он лучше структурирован и лучше читается.
[rel://files/Скриншот диалога исправленного.PNG]

+++Анализ скриншота:
- начальные тексты выведены без цветовой схемы.
- Выведена дата и время, но время не обновляется. Наверно и незачем. 
  Но все же нужны команды для показа текущей даты и времени.
- прием запроса выводится без цветовой схемы.
- начало процедуры обозначается текстом, но это надо изменить. 
  Либо не выводить сообщение о начале процедуры вообще, либо выводить более стильно.
  - лучше выводить сообщения о начале и конце процедур в лог отладки, а не на экран.
  + оформлено более стильно.
 + 1 пункт процедуры вообще не выводится. Раз уж он пропускается, поскольку имя сразу берется из текста команды, то следует тогда вывести его этим 1 пунктом.
  + исправлено
 + Введите Словоформы Места - Словоформы надо с маленькой буквы.
- в пункте 4 надо переключаться на английский язык. 
  Приходится набирать путь вручную, так как вставка из клипборда тут нестандартная.
  Кстати, а еще потребуется процедура создания места по имеющемуся пути - так тоже пригодится?
- в пункте 5 класс места состоит из комбинации символов разных раскладок. 
  - Там могут быть ошибки. Эту нотацию надо проверять.
  - также, я хрен знает, какой класс назначить месту. Нужны примеры, справочник, итп.
 + пункты 2 и 6 имеют цвет, отличающийся от других пунктов.
  - надо либо забить на эту цветовую схему, либо обязать все пункты выводиться как заголовки, а не как вопросы.
  + исправлено: все пункты плана должны выводиться как заголовки-сообщения.
 + между пунктами нет промежутков, они все сливаются в один массив сообщений.
  Надо разделять пункты процедуры одной пустой строкой.
  А команды разделять двумя пустыми строками.
  + исправлено: все пункты плана должны предваряться пустой строкой.
- нет сообщения о конце процедуры. Есть только сообщение об успешном завершении создания места.
  - пока не придумал ничего  
 + между концом вопроса и символом [ нужен один пробел, чтобы визуально отделять эти секции.
  + сделано
- цвета в цветовой схеме как-то не очень. Хотя я четко опознаю вопросы и ответы, сообщения об успехе и проблемах, но вот как-то...
  Непривычно?

И код процедуры все равно сейчас не закончен, содержит много ТОДО, недоделок, и много лишнего кода.
