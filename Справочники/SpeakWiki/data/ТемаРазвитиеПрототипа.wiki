++ Тема Развитие Прототипа

* ЭтапыРазвитияСистемы

+++Замечания по развитию прототипа
++++Сохранять модель небольшой
Изначально РИ ппроектировался как маленькая система, около 100 сущностей-мест и 1000 [Процедура].
Я намеревался ее в таком виде изучить, чтобы решить, что и как в ней.

Это просто небольшой прототип, который в основном предназначен для сбора запросов.

А я сейчас пытаюсь ее растянуть под ВСЕ свои нужды. На несколько тысяч сущностей. 
И соответствующее количество [Процедура]. Причем самых фантастических.

Это приводит к деформациям концепции. Надо сначала создать и отработать концепцию малой системы, прежде чем переходить к большой. 
А не все сразу и в куче.

Итак, сейчас делаем маленькую модель РИ. В какую предметную область можно ее применить, чтобы она была и небольшой, и достаточно полезной?
- Органайзер и Инвентарь?

++++Основательность проработки концепции
Надо прорабатывать концепцию прототипа сейчас. 
Очевидно, что, чтобы прототип был полезным в качестве Оператора, нужно наполнить его множеством [Место] и [Процедура], и их классов соответственно. 
Фактически это более тысячи элементов, особенно [Процедура]. 
Если в ходе эксплуатации выяснится, что нужно внести изменения в устройство [Место] и [Процедура], то придется переделывать все эти наработки на новый формат.   
Хотя все же нужно создавать эти штуки сейчас, а не ждать, когда будет готов идеальный концепт.
Поскольку польза проекта в его применении.
Но все же следует более тщательно прорабатывать концепцию, прежде чем заводить в нее сотни элементов, которые еще и не часто востребованы.
То есть, нужно в этом плане быть более основательным, и этому способствует нежелание переделывать все эти уже существующие элементы.

+++Вопрос функциональности Оператор
Тут есть вопрос: а для какой деятельности будет использоваться Оператор? Это важно, чтобы начать работу - надо собирать материалы для этого. Какие процессы происходят в этой области деятельности, какие из них можно переложить на Оператор?
- моя работа на компьютере. Уже рассмотрена ранее. Но вот ей не хватает  чего-то для ясности. Я вот сейчас делаю эти Хранилища, РеестрХранилищ, перерабатываю свои коллекции данных в справочники сущностей - вроде бы это часть подготовки данных для Оператора. Но как это все сложится в одно целое - непонятно пока. 

+++По речевому интерфейсу
надо сразу задаться целью разработки, какая это должна быть модель, с каким функционалом и для того чтобы не забыть, для чего все это затевалось, контролировать достижение целей разработки. А то будет как всегда - пока придумываю, как - забываю, зачем.

Нужно разработать не одну, а несколько конечных целей, чтобы они были последовательным развитием идеи от примитивного притотипа до конечной наиболее подходящей модели. И постепенно развивать с тем чтобы было ясно, как их организовать и как это все будет выглядеть в плане наращиваия развития. Потому что  собрать сразу сложную систему трудно при отсутствии опыта, потребуются прототипы и поиск решения. Этот поиск решения проще сделать на менее сложной системе, отработать реализацию и практическое использование. И потом уже развивать найденные оптимумы в более сложную систему. Надо сразу наметить три этапа - модели: начальную, промежуточную и конечную. И постепенно их развивать.
 
Мои проекты продвигаются плохо потому, что я их недостаточно хорошо прорабатываю. Я сразу переключаюсь на далекие перспективы, и пытаюсь их определить и описать. А путь, который к этим ситуациям ведет, я недостаточно себе представляю. Поэтому я могу хорошо разработать конечное состояние, но не могу туда придти, так как не разрабатываю проход в это новое состояние. Поэтому и не могу туда дойти. Вот эта проблема у меня постоянно. Конечную точку я намечаю, разрабатываю. А вт путь до нее никак не получается придумать. Поэтому мне мало чего удается добиться. На пути постоянно происходят какие-то события, из-за которых я не могу добраться до цели. Постоянно авозникают какие-то проблемы.
Надо как-то совместить проектирование конечной цели, потому что оно необходимо чтобы выбрать направление, и проектировать путь до этой конечной цели, как второй жэтап разработки, не менее важный, чем первый. Это надо записать и переработать, чтобы сделать более компактным и понятным и лучше проработать методику. Очевидно, надо изучать способы достижения целей, как способы продвижения к моей цели. Но в моей специфике.

+++Переделка на новую версию
Сейчас Оператор перенесен на новую ОС и ничего делать не может, так как [Место] и операций для этой системы у него нет. Его надо переделывать.

- Надо чтобы [Место]а и операции создавались и вручную и автоматически - сканированием папок и файлов, созданием коллекций определенного типа.
--Проблема в том, что сейчас [Место] намного больше, чем я могу запомнить, чем эффективно может оперировать эта технология. Но я мог бы отсеять совсем невостребованные [Место]а, и мне нужен поиск для таких редко используемых [Место].

-Надо сделать его в автозагрузку, чтобы он отслеживал события и выводил напоминания.
- Мне нужны напоминания о том что пора браться за другой проект. Они раз в две недели должны меняться. И даже можно предлагать тупо все проекты по очереди, что есть в папке проектов. Если не работать по проекту, то хотя бы написать причину или переработать существующую информацию проекта.
- можно бы просто запланировать работу над проектами вручную один раз, а потом только вносить изменения в общий план.
- Как это автоматизировать? Можно просто перебирать все проекты в системе. Или можно присвоить им важность, и более важные предлагать чаще. Но не подряд. Это позволит критичнее относиться к проектам и выбирать что-то другое, если неохота делать ничего.
--Чтобы перебирать, надо наладить автоматический разбор параметров проекта. Из файлов описаний проектов или из БД? Лучше из файлов описаний проектов. Иначе проекты придется создавать только через общую утилиту с БД.

Оператору нужна БД, где он будет хранить данные о сущностях, найденных на компьютере или введенных пользователем. 
Это нужно чтобы распознавать сущности по названиям в запросах пользователя.
Такая БД может быть реляционной, хотя Тапп удобнее.

Есть проблема: склонения названий сущностей. Сейчас пользователь вводит все формы названий сущности при создании новой сущности. При автоматическом создании сущности вводить склонения будет некому. Как это обрабатывать?

Эти сущности могут быть :
- вручную добавлены пользователем в Оператор.
- Найдены на компьютере специальными [Алгоритм]ами. Например, файлы музыки.
- выявлены прутем статистического анализа запросов пользователя.
- получены из Интернета как предварительно подготовленная база данных. Например, имена городов.

+++Первые наброски
Запросы к РИ

Создать заметку
Открыть студию
Открыть Блокнот
Создать Задачу
Найти строкузапроса

Тут сначала надо сделать некую форму, и чтобы она работала хотя бы в примитивных случаях.
Тогда я смогу ею пользоваться, и буду в нее всякие запросы печатать.
А то сейчас не придумывается ничего - все слишком абстрактно.
Эта форма будет собирать запросы, а потом я их осмотрю и подумаю.

Устройство
Запрос набивается в некотором текстовом окне.
Этот запрос отправляется в некий процессор, который ищет в БД функцию, которая выполнит этот запрос.
Еще эта же функция бы и сам запрос разбирала и определяла, для нее он или нет.
Но как тогда выбирать лучшую функцию для запроса?.

Есть такая штука - КонтекстЗадачи. Его надо где-то хранить.
Его нужно использовать при работе в обе стороны 
 процесса - и при приеме [Команда], и при выдаче ответа пользователю.
И функции подбирать согласно этому КонтекстЗадачи.

Но тут есть проблема - живой секретарь может выявить КонтекстЗадачи, наблюдая за пользователем, по обстановке.
А компьютер не видит пользователя, и не может инициализировать КонтекстЗадачи.
Пользователь должен тогда сам обозначать КонтекстЗадачи. 
Фразами вроде: А сейчас давай посмотрим кино. Какой фильм у нас есть и мы его давно не смотрели?
Это такое общение, а не ручное управление, как обычно.


15 июля 2016
Вот если бы у меня не было других проектов, я мог бы сделать консольное приложение, которое бы запускалось и постоянно работало в течение сеанса пользователя. 
Пока оно бы просто собирало введенные в него запросы. Хотя запросы вводились бы редко и только в целях развития проекта.
Потом можно было бы собрать накопленные идеи и материалы и потребности, свести их в концепцию и дополнить это приложение-консоль функциональностью. Это увеличило бы использование проекта и дало бы от него отдачу. В виде экономии усилий и единообразия действий.
Потом можно было бы еще более улучшить проект, сделав его действительно полезным.
А сейчас это не работает потому, что другие проекты надо делать. И они занимают это время и пространство идей.
Хотя можно начать проект, хотя бы как эксперимент. Чтобы проверить идею.  


+++Заметка 1 мнение
Этот РИ. 
Сейчас я собираю запросы - просто какие вздумается, а не те что реально нужны. Так как они не исполняются, это просто забава такая.
Сначала я забью себе голову, как реализовать в приложении исполнение своих запросов.
Потом я буду реализовывать эти запросы, по мере их появления.
Потом я смогу просто вводить свои действия текстом, не рысканием по меню итд.
Это единообразный способ выполнения действий, и я немного отделаюсь от необходимости помнить интерфейс винды. Но не программ.
А что кардинально изменится вообще? Что мне это даст такого хорошего, существенно? 
Работу оно за меня делать не станет. Разве только искать станет удобнее. Но только после того, как я потрачу кучу времени на то, чтобы все это настроить. 
Эта настройка и разработка должна быть сделана всего один раз, а потом только пользоваться результатом.
Но вот именно я и буду ее делать, а не скачаю  на халяву. 

И все же, ничего существенного она не мне не прибавит. Работу за меня не сделает - наоборот, добавит свою. А мне надо то, что делает за меня работу. Хотя бы мух, что-ли, разгоняет.

+++Приоритеты
Сначала надо выяснить, что из этого функционала Оператора мне пригодится, а то много идей и все они сложные.

+++Следующий этап разработки
На этом этапе Оператор должен стать Будильником и Напоминаниями для моих задач вроде бекапов. И собирать запросы в отдельный файл запросов.

++Общее развитие проекта
Оператор рассматривается как точка приложения усилий по разработке и развитию ИИ.
Пока это очень абстрактный план получается. На него потребуется около 20 лет по 220 дней по 8 часов работы над проектами.
1. Сначала собираем процедуры и сущности, учимся их хранить, организовывать и использовать.
2. Затем собираем алгоритмы различных процессов, в форме ЛентаСобытий, учимся их хранить, организовывать и использовать.
3. Затем собираем из множества ЛентаСобытий граф методов в Тапп, учимся его организовывать и использовать.
4. Затем совершенствуем все это, переработав в единообразную и удобную систему.
5. Затем приделаем мотивацию и самоорганизацию - вот уже нечто подобное И получается. Но ему еще нужен план развития.


