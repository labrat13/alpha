++ Дополнительные Данные К Созданию Процедур


+++План диалога
Пока надо просто написать последовательность вопросов. План диалога. 
А потом добавить проверки, выходы, нарисовать весь алгоритм + откат изменений, и обкатать все это в реализации на консоли.
Так как на консоли эти вопросы воспринимаются иначе, надо подобрать хороший вариант реализации.

+++Лог
Начало и Завершение Процедуры должно писаться в Лог и (опционально, на флаг отладки) выводиться в консоль пользователю 
(серым цветом?) Это надо добавить в руководство по созданию Сборок Процедур.

+++Справка к сборке процедур
Хорошо бы открыть CHM-справку в отдельном окне, при запуске команд. входящих в поставку Оператора.
Таких вот служебных команд.
- Можно желать такой файл справки для каждой Сборки Процедур.
  И хранить его рядом с файлом сборки. Вызывать сразу страничку по названию Процедуры, если она есть.
-- Справка все равно нужна, так как надо документировать процедуры, версии процедур, итп.
- В справку CHM не получится добавить справочник по классам Мест - он должен пополняться. Его надо из самого Оператора вызывать.
--В Операторе нужно сделать и выводить список-справочник классов мест, причем как функцию, а не команду. 

+++Стандартные процедуры сборки процедур
Процедуры сборки:
Класс Asm - инфраструктура сборки процедур
- Install(Engine e) - Установка сборки в Оператор 
- Remove(Engine e) - Удаление сборки из Оператора
- Init() - Инициализация сборки
- Exit() - Завершение сборки
- enum AssemblyState - енум Состояние сборки - в каком состоянии сборка находится. 

+++БД
Если все данные из БД кешируются. то надо держать БД закрытой, открывать только на время выполнения операций изменения данных.
- закрывать по таймеру?
- сейчас она просто всегда открыта.
- Надо подумать над этим позже!

+++Патч - пробелы в путях файлов
Места и файлы, в пути которых содержатся пробелы, не работают, так как эти пути надо заключать в кавычки.
Это только для аргументов командной строки. В сборки процедур аргументы передаются правильно и без кавычек.
- Сделано исправление, в коде для запуска утилит, но не процедур.  Сейчас все работает.
Выбрать лучший способ:
А) Не патчим кавычки в коде, но заключаем аргументы в кавычки в поле Routines.Path БД
Б) Патчим аргументы в кавычки, если их значение содержит пробелы. Тогда поле Routines.Path БД не должно содержать заключенные в кавычки аргументы, так как они будут подставлены патчем.
- Выбран способ Б, так как он не требует от пользователя помнить, что там есть какие-то специальные случаи для аргументов.

+++Разное
Плеер MPC-HC не играет плейлисты WMPlayer!

+++Ввод путей к файлам
В этой консоли очень неудобно вводить пути к файлам. Копипастить нельзя быстро.
Значит, создавать Места тоже долго. Надо это как-то упростить.
- интегрировать создавалку Мест в Проводник Виндовс - это нелепо! Тогда уж лучше вообще без Оператора.
- можно создавалку сделать в админской утилите Оператора. Там будет быстро и правильно. Но это выход из концепции Оператора "Вся работа только через консоль". Так что пока будем избегать.
- можно добавить субкоманду для диалога. При вводе этой субкоманды Оператор будет показывать GUI|-окно открытия файла/папки, куда можно добавить требуемое перетаскиванием или копипастом или выбором по дереву папок и файлов, как в стандартном GUI.
-- Этот код обработки субкоманды надо добавить в каждую диалоговую функцию Движка. чтобы код процедур только указывал флаг субкоманды, и никак не участвовал в этих GUI-формах.
-- но из консоли нельзя показывать диалоги. Нужен другой релиз Оператора, не консольное приложение.

+++Инвентарь
Инвентарь тоже надо переделывать? 
Он не хочет искать предметы с аргументом командной строки. Только со ссылкой своей.
  
+++Проблемы проекта
В проекте слишком много умолчаний, недоделок, пробелов в концепции, ручной работы и знаний. 
Его нельзя использовать в таком виде. 
Надо составить спсок проблем и решать их!

Надо концепцию переворошить и переписать в более удобный и понятный вид.
Я все забыл. А там все на условностях, веревочках, надо помнить все эти условия.
И отлаживать код без твердого понимания, документации - очень долго.

Нужно описать, как создавать Процедуры и Места, какие значеия вводить, что они означают, куда смотреть, где брать примеры.
Как все это работает: Исполнение Процедур, использование Мест.
Без этого будет долго и трудно работать с Оператором.

+++ФС оператора - проблемы
Завести для Оператора папку Tools и впихать в нее утилиты. wget? 
А Как вызывать потом? Как путь к wget  прописать в Процедуре?

+++Идеология проекта
Путь для Оператора в версии 1:
- Лаунчер для программ, утилит, итп.
- развитие базы для версии 2.

Но вот это понимание надо записать в концепции. А то я его забуду.
То есть, надо натаскать в Оператор утилит и наделать команд и Процедур.
Чтобы Оператор служил таким центром запуска этих команд, центром возможностей.
Надо просто сделать это, и уже будет небольшое достижение.
Небольшой рост эффективности труда. Если пользоваться этими возможностями.
И продвижение в теории, концепции проекта. Но работы тут много. Это надолго, нужен план.

+++Реализация интерфейса
Все время всплывает идея сделать Оператор как строку поиска и команд на панели задач. 
Там можно было бы вводить текстовые команды прямо во время работы других программ. 
Как в IronMan2 - ввод Translate во время воспроизведение видеоролика с террористами.
-Надо это обдумать.
-- места слишком мало. Команды поместятся, а диалоги - нет
-- эта штука есть в линуксе. и там она просто запускает команды. Но ее можно раскрыть в полноценный терминал кнопочкой, и свернуть опять на панель задач.
-- эта идея - надо подумать позже, когда я определюсь с более важными вещами в устройстве Оператора. 

+++Специальное место Это
Есть идея: Специальное место "Это".
- встроенное?
- со словоформами.
- Вроде буфера, в котором хранятся результаты предыдущей операции? Например, поиска?
> Найти файл "Caribbean rave"
> Играть это
- Но это уже грамматика, обусловленное построение фраз, соглашение, правило для пользователя.
Это неправильно! Тоже костыль, как и все тут.
- Только один результат требуется или массив результатов?
- Нужны команды для работы с результатами и массивами.
> выбери третий элемент из этого

+++Проблемы проекта 2
Каждое такое изменение в концепции требует переосмысления всей концепции. 
Поэтому их нельзя вносить кучей, поспешно. без плана и изучения проблемы и последствий.
- и переработки механизма команд, свойств команд.
Надо четко разделять проект на этапы, релизы и версии. Изучать и эксплуатировать каждую версию, пока она не станет удобной. Это долго и нудно.

+++Места 
А где вообще используются Места? Надо перечислить все случаи.  

+++Вес процедуры
Как пользователь определит свойство Вес Процедуры, если для этого надо видеть все команды в БД и сортировать их по первому слову команды?
Из диалога создания процедуры - нельзя определить вес процедуры. Назначить наобум - тоже не подходит.
Потом не поймешь, почему команда не работает.
Автоматически выбирать вес по регексу - и сложно, и не очевидно, и все равно вручную исправлять иногда придется.
Сложно добавлять процедуры в Оператор!

А как расставлять веса процедурам из сторонних сборок процедур?
Они же будут их ставить как попало в своих сборках.
А тут - только автоматически назначать, получается.
Иначе пользователь забросит эту чудо-хрень сложную и непонятную.

+++Проблемы проекта 3
Слишком много веревочек в проекте сейчас. Это плохо! 
Проблемы надо выявить, описать, придумать решение.  
А то проект выглядит принципиально невыгодным. 

+++БД Оператора
Поля в таблице БД Routines надо переделать и переименовать - они не информативные, дублирующиеся по содержимому.

+++Задачи проекта
Тут сейчас получается  задачи:
- закончить создание Мест.
- начать - сделать новые вики для проектов Оператора
- добавить новые материалы в вики
- тестироватьОператр дальше.
- в заметках новые задачи.
- надо записывать задачи в менеджер проектов. Я про инх забываю.
И они накапливаются, и я их не исполняю. 
Ну хоть 10% записанных задач будет выполнено - и то уже хорошо.
КПД от этого ведения проектов = 10%,  надо уже просто привыкнуть к этому.
- Но так много работы и так мало результатов... Тоска...

+++Семантический анализатор
Есть идея при поиске процедуры для запроса брать первое слово (глагол или хз что) и искать его словоформы по таблице словоформ вроде Words.

Считай - считать
Какой - вроде не склоняется
Открой - открыть

И затем уже искать процедуры по запросу, начинающемуся с этих словоформ, а не с одной словоформой из запроса.
Это позволит использовать более свободное указание команд, чем сейчас.
- Сейчас это первичная форма глагола, принята стандартом в Оператор.
- Будет и в повелительной форме глагола, более привычной в диалоге.

Этим мог бы заниматься модуль Анализатор семантики, но тогда он должен также выбирать кандидатов в процедуры для исполнения, из БД Оператора.
И он бы мог парсить сложные команды вроде Замесить и нарубить.
И скрипты команд исполнять тоже он бы мог бы тогда?

Вот это все надо отдельно проработать как часть архитектуры Оператора.

