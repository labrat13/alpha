++ Абстрактный Русский Язык

Нужен еще более абстрактный язык программирования, чем Шарп.
То есть, ограниченное подмножество русского языка.
- Интерпретатор, который сам подбирает реализации для задачи.
- БД реализаций.
- Надо будет описать требуемый результат, чтобы интерпретатор мог построить цепочку процедур для его достижения.
-- может оказаться, что это невозможно сделать автоматически, тут пользователь должен искать решение и потом сохранить его в БД реализаций.
- правильно будет именно так все и строить: сначала подробно описать результат, потом поиск пути его достижения.

- можно сначала создать набор (много) таких алгоритмов для разных задач, а потом свести их в один граф и сделать автоматический трассировщик путей через этот граф.
-- это лучше, чем все с нуля придумывать. Хотя бы часть проблем будут решены на этапе анализа существующего набора алгоритмов.
- или можно одновременно строить граф иписать алгоритмы задач.
--Это хуже - много лишней работы.
- в любом случае, надо начинать с того, что:
-- писать алгоритмы Задач на русском языке, как список пунктов.
-- придумать и реализовать исполнение этих алгоритмов, отладку и контроль за исполнением (как их прервать или приостановить, получить процент завершения).
-- придумать, как оценить и описать готовность алгоритма для использования (а то у меня много недоделанных задач валяется везде, и тут тоже будут недоделки.)

- в алгоритмах задач, даже написанных на русском языке, потребуются:
-- логические сравнения (истина, ложь, больше, меньше, равно)
-- условные переходы если ... То ... Иначе...
-- циклы Для каждого, для всех,
-- операции с множествами
-- коллекции (списки, словари, стеки, очереди)
И проблема в том, что в обычном русском языке эти вещи часто подразумеваются опытом исполнителя. Поэтому и в задании не указываются совершенно.
 

Надо изучить тему предикаты в WIQA - но я не нашел достаточно материалов про преобразование текста в предикатные формулы. Кое-что есть, но это все надо изучать отдельной темой или даже проектом.