Регекс Процедуры
Это свойство Процедуры.
Оно необходимо для того, чтобы получить из текста запроса пользователя:
1. Флаг Да/Нет того, что Процедура может обработать данный запрос.
   Что она подходит для данного запроса по семантике и количеству аргументов.
2. Список аргументов с их значениями.

Общие свойства:
- Регекс чувствителен к регистру символов, поэтому тексты запросов и команд, названия Мест, итп - также 
  чувствительны к регистру символов, если в алгоритме не были приняты меры по согласованию регистра символов.
- Регекс, в основном, повторяет текст команды (запроса), отличаясь только фрагментами, 
  которые указывают на сменяющиеся Сущности:файлы, каталоги, Места. 
  Эти сменные участки нужно обозначить как аргументы и передать их в Процедуру.
- Первым словом запроса обязательно должен быть глагол в первичной форме.
  Пример: Спать, Включить, Открыть, Играть, Попробовать.
  Исключения из этого правила есть, они несут различные функции, обусловленные строением русского языка.
  Сейчас такие варианты не реализованы в Оператор. 
- TODO: Добавить еще что-то позже сюда.

Регекс возможен в 3 вариантах:
А) Вариант без аргументов.
- в этом случае просто текст запроса должен совпасть с текстом регекса.
- Пример: Выключить компьютер.

Б) Простой регекс:
- Создан для пользователей, которым некогда изучать Regular Expression, а результат нужен.
- Аргумент в тексте команды обозначается символом % перед именем аргумента.
- Имя аргумента не должно содержать пробел и прочие символы, не являющиеся буквами и цифрами.
- Первый символ имени аргумента должен быть буквой.
- Пример: Копировать %файл в %папку. 
- Неправильный пример: Копировать %супер-пупер файл в %типа!папку?
- Но, поскольку Java regular expression engine не поддерживает русские имена для named-capturing group, 
  то эти названия аргументов в процессе исполнения запроса превращаются в названия arg_№, 
  где № - порядковый номер аргумента в регексе, начиная с нуля. И в таком виде передаются Процедуре.
- Для пользователя такой регекс выглядит достаточно понятным и простым. 
  Но для дальнейшего исполнения Простой регекс превращается в Нормальный регекс.  

В) Нормальный регекс.
- Нормальный регекс может применяться пользователями, знакомыми с Regular Expression.
- Нормальный регекс позволяет более гибко настраивать обработку запроса для Процедуры.
- Пример: 
  Для запроса:   my app.exe -t -dhttps://www.абыр-валг.com%[12*34] -c"www.абыр-валг.ru"
  Неправильно:	^my app.exe -t -d(?<arg1>.+?)%[12*34] -c"(?<arg2>.+?)"$      - это неправильный регекс
  Правильно:    ^my app\.exe -t -d(?<arg1>.+?)\%\[12\*34\] -c"(?<arg2>.+?)"$ - это правильный регекс
- Теперь вы могли бы заметить, что Нормальный регекс сложнее для понимания, чем Простой регекс. 

  
