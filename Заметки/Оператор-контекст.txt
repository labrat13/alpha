Оператор - контекст
Для работы  с Тапп через Оператор нужно подключить Солюшен Тапп к Оператор.
Это можно сделать одной командой, но потом надо где-то хранить этот объект доступа к солюшену Тапп.
Чтобы обращаться к нему в последующих командах Оператор.
А в конце работы - закрыть и освободить солюшен Тапп.
Для этого нужно в памяти Оператора держать такой объект Тапп.
То есть, контекст сеанса Оператора должен содержать также и открытые в сеансе объекты: внешние БД, солюшены Тапп, итп.
И из этого контекста код команд Оператора должен иметь возможность извлекать эти объекты по их именам.
Это вроде локальных переменных алгоритма, но в качестве алгоритма будет сеанс Оператора.
- Тогда желательно отделить такие работы от остальных работ сеанса Оператор, выделив их в под-сеанс, кусочек работы по проекту. 
  - тогда и записывать введенные команды как алгоритм-лог этого подсеанса, хотя они будут содержать также сторонние команды, вроде Спать или Сделай ярче.
 Значит, КонтекстОператора нужно реализовать как дерево, состоящее из под-деревьев, в которых хранятся объекты контекста как элементы контекста как пары имя-переменная.
Еще наверно полезен будет таймштамп создания переменной, чтобы их выявлять и правильно обрабатывать.
Еще - комментарий, когда и зачем была создана каждый объект контекста.
Еще - контекст должен содержать имена неймспейсов, по ним будут отбираться команды для исполнения и места для подстановки.
Сеанс Оператора начинается при старте Оператора и заканчивается при завершении Оператора, как и лог Оператора.
Контекст сеанса создается в начале сеанса и содержит начальный набор неймспейсов и начальные объекты-переменные контекста сеанса.
- тут еще много работы, пока неясно, в каких случаях создаются под-сеансы и как все это обслуживать.
 